"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7053],{7053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var a=t(7896),r=(t(2784),t(30876));const s={},i=void 0,o={unversionedId:"auto-generated/previews/angular/tree-custom.ts",id:"auto-generated/previews/angular/tree-custom.ts",title:"tree-custom.ts",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/tree-custom.ts.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/tree-custom.ts",permalink:"/docs/auto-generated/previews/angular/tree-custom.ts",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/tree-custom.ts.md",tags:[],version:"current",frontMatter:{}},l={},d=[],m={toc:d};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Component } from '@angular/core';\nimport { TreeContext, TreeModel } from '@siemens/ix';\n\ntype TreeData = {\n  name: string;\n  icon: string;\n};\n\n@Component({\n  selector: 'app-example',\n  styles: [\n    `\n      .example {\n        display: block;\n        position: relative;\n        height: 32rem;\n        width: 100%;\n      }\n    `,\n  ],\n  template: `<div class=\"example\">\n    <ix-button\n      id=\"expand\"\n      ghost\n      style=\"margin-bottom: 2rem\"\n      (click)=\"expandAndSelect()\"\n      >Expand Tree</ix-button\n    >\n    <ix-tree\n      root=\"root\"\n      [model]=\"model\"\n      [context]=\"context\"\n      [renderItem]=\"treeItem\"\n    ></ix-tree>\n    <ng-template #treeItem let-item>\n      <div class=\"d-flex align-items-center\">\n        <ix-icon [name]=\"item.icon\" size=\"16\" class=\"me-2\"></ix-icon>\n        {{ item.name }}\n      </div>\n    </ng-template>\n  </div>`,\n})\nexport default class TreeCustom {\n  context: TreeContext = {};\n  model: TreeModel<TreeData> = {\n    root: {\n      id: 'root',\n      data: {\n        icon: '',\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n        icon: 'star',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n        icon: 'cut',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n        icon: 'print',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  };\n\n  expandAndSelect() {\n    this.context = {\n      sample: {\n        isExpanded: true,\n        isSelected: false,\n      },\n      'sample-child-2': {\n        isSelected: true,\n        isExpanded: false,\n      },\n    };\n  }\n}\n")))}c.isMDXComponent=!0}}]);