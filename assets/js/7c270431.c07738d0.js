"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[91983,50793],{30876:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||o;return t?r.createElement(m,c(c({ref:n},p),{},{components:t})):r.createElement(m,c({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},50793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=t(7896),a=(t(2784),t(30876));const o={},c=void 0,i={unversionedId:"auto-generated/previews/react/input-search",id:"auto-generated/previews/react/input-search",title:"input-search",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/input-search.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/input-search",permalink:"/docs/auto-generated/previews/react/input-search",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/input-search.md",tags:[],version:"current",frontMatter:{}},s={},u=[],p={toc:u};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxIcon, IxIconButton, IxInputGroup } from \'@siemens/ix-react\';\nimport React, { useState } from \'react\';\n\nexport default () => {\n  const [message, setMessage] = useState(\'\');\n\n  function reset() {\n    setMessage(\'\');\n  }\n\n  let display = message === \'\' ? \'none\' : \'block\';\n\n  const handleChange = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    <form className="needs-validation m-2">\n      <IxInputGroup>\n        <span slot="input-start">\n          <IxIcon name="search" size="16"></IxIcon>\n        </span>\n        <input\n          id="input-string"\n          type="string"\n          onChange={handleChange}\n          value={message}\n        />\n        <span slot="input-end">\n          <IxIconButton\n            onClick={reset}\n            id="clear-button"\n            icon="clear"\n            ghost\n            size="16"\n            style={{ display: display }}\n          ></IxIconButton>\n        </span>\n      </IxInputGroup>\n    </form>\n  );\n};\n\n')))}l.isMDXComponent=!0}}]);