{"version":3,"file":"card-list.e2e.js","sourceRoot":"","sources":["../../../src/tests/card-list/card-list.e2e.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAE7C,cAAc,CAAC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;EAC/C,cAAc,CAAC,oCAAoC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACtE,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACnC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,CACJ,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAClE,CAAC,eAAe,EAAE,CAAC;EACtB,CAAC,CAAC,CAAC;EAEH,cAAc,CAAC,kBAAkB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACpD,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAC3C,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,CACJ,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAClE,CAAC,eAAe,EAAE,CAAC;EACtB,CAAC,CAAC,CAAC;EAEH,cAAc,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACxD,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAE3C,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,sBAAsB,EAAE,CAAC;IACpD,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,CACJ,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAClE,CAAC,eAAe,EAAE,CAAC;EACtB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { expect } from '@playwright/test';\nimport { regressionTest } from '@utils/test';\n\nregressionTest.describe('card-list: basic', () => {\n  regressionTest('should not have visual regressions', async ({ page }) => {\n    await page.goto('card-list/basic');\n    await page.waitForTimeout(1000);\n    expect(\n      await page.screenshot({ fullPage: true, animations: 'disabled' })\n    ).toMatchSnapshot();\n  });\n\n  regressionTest('layout scrolling', async ({ page }) => {\n    await page.goto('card-list/layout-scroll');\n    await page.waitForTimeout(1000);\n    expect(\n      await page.screenshot({ fullPage: true, animations: 'disabled' })\n    ).toMatchSnapshot();\n  });\n\n  regressionTest('layout scrolling end', async ({ page }) => {\n    await page.goto('card-list/layout-scroll');\n\n    await page.locator('#end').scrollIntoViewIfNeeded();\n    await page.waitForTimeout(1000);\n    expect(\n      await page.screenshot({ fullPage: true, animations: 'disabled' })\n    ).toMatchSnapshot();\n  });\n});\n"]}