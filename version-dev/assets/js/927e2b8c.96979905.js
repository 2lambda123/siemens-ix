"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[56402,46419],{30876:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var o=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?o.createElement(f,i(i({ref:n},u),{},{components:t})):o.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},46419:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=t(7896),r=(t(2784),t(30876));const a={},i=void 0,l={unversionedId:"auto-generated/previews/react/modal-sizes",id:"auto-generated/previews/react/modal-sizes",title:"modal-sizes",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/modal-sizes.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/modal-sizes",permalink:"/version-dev/docs/auto-generated/previews/react/modal-sizes",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/modal-sizes.md",tags:[],version:"current",frontMatter:{}},c={},s=[],u={toc:s};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { IxModalSize } from '@siemens/ix';\nimport { IxButton, Modal, ModalRef, showModal } from '@siemens/ix-react';\nimport React, { useRef } from 'react';\n\nexport default () => {\n  const modalRef = useRef<ModalRef>(null);\n\n  const open = (size: IxModalSize) => {\n    showModal({\n      size: size,\n      content: (\n        <Modal ref={modalRef}>\n          <IxButton onClick={() => modalRef.current?.close(null)}>\n            Modal with size {size}\n          </IxButton>\n        </Modal>\n      ),\n    });\n  };\n\n  return (\n    <div className=\"modal-sizes-example\">\n      <IxButton onClick={() => open('360')}>Show modal size 360</IxButton>\n      <IxButton onClick={() => open('480')}>Show modal size 480</IxButton>\n      <IxButton onClick={() => open('600')}>Show modal size 600</IxButton>\n      <IxButton onClick={() => open('720')}>Show modal size 720</IxButton>\n      <IxButton onClick={() => open('840')}>Show modal size 840</IxButton>\n      <IxButton onClick={() => open('full-width')}>\n        Show full-width modal\n      </IxButton>\n      <IxButton onClick={() => open('full-screen')}>\n        Show modal size full-screen\n      </IxButton>\n    </div>\n  );\n};\n\n")))}d.isMDXComponent=!0}}]);