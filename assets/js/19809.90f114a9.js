"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[19809],{19809:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>m,toc:()=>r});var o=n(7896),i=(n(2784),n(30876));const c={},s=void 0,m={unversionedId:"auto-generated/previews/web-component/theme-switcher",id:"auto-generated/previews/web-component/theme-switcher",title:"theme-switcher",description:"\x3c!--",source:"@site/docs/auto-generated/previews/web-component/theme-switcher.md",sourceDirName:"auto-generated/previews/web-component",slug:"/auto-generated/previews/web-component/theme-switcher",permalink:"/docs/auto-generated/previews/web-component/theme-switcher",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/web-component/theme-switcher.md",tags:[],version:"current",frontMatter:{}},l={},r=[],a={toc:r};function h(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<style>\n  ix-col {\n    display: flex;\n    align-items: center;\n    height: 2.5rem;\n  }\n</style>\n\n<ix-layout-grid>\n  <ix-row>\n    <ix-col size=\"2\">\n      <span>Light/Dark</span>\n    </ix-col>\n    <ix-col>\n      <ix-button id=\"toggle-mode\">Toggle mode</ix-button>\n    </ix-col>\n  </ix-row>\n\n  <ix-row>\n    <ix-col size=\"2\">Theme</ix-col>\n    <ix-col>\n      <ix-select id=\"select-theme\" placeholder=\"Select a theme\">\n      </ix-select>\n    </ix-col>\n  </ix-row>\n\n  <ix-row>\n    <ix-col size=\"2\">Use System</ix-col>\n    <ix-col>\n      <input type=\"checkbox\" id=\"system\" />\n      <label for=\"system\"></label>\n    </ix-col>\n  </ix-row>\n</ix-layout-grid>\n\n<script type=\"module\">\n  import { themeSwitcher } from '@siemens/ix';\n\n  (async function () {\n    const themes = ['theme-classic-light', 'theme-classic-dark'];\n    let selectedTheme = themes[1];\n\n    setTimeout(() => {\n      themeSwitcher.setTheme(selectedTheme);\n    });\n\n    const toggleModeButton = document.getElementById('toggle-mode');\n    toggleModeButton.addEventListener('click', () => {\n      themeSwitcher.toggleMode();\n    });\n\n    const themeSelect = document.getElementById('select-theme');\n    themes.forEach((theme) => {\n      const item = document.createElement('ix-select-item');\n      item.label = theme;\n      item.value = theme;\n      themeSelect.appendChild(item);\n    });\n\n    themeSelect.value = selectedTheme;\n\n    themeSelect.addEventListener(\n      'itemSelectionChange',\n      ({ detail: [theme] }) => {\n        themeSwitcher.setTheme(theme);\n        selectedTheme = theme;\n      }\n    );\n\n    const toggleSystem = document.getElementById('system');\n    toggleSystem.addEventListener('change', ({ target }) => {\n      if (target.checked) {\n        themeSwitcher.setVariant();\n        return;\n      }\n\n      themeSwitcher.setTheme(selectedTheme);\n    });\n  })();\n<\/script>\n")))}h.isMDXComponent=!0}}]);