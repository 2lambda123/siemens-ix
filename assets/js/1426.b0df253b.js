"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1426],{1426:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var a=s(7896),n=(s(2784),s(30876));const r={},o=void 0,c={unversionedId:"auto-generated/previews/react/message",id:"auto-generated/previews/react/message",title:"message",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/message.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/message",permalink:"/docs/auto-generated/previews/react/message",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/message.md",tags:[],version:"current",frontMatter:{}},i={},m=[],u={toc:m};function d(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"import { showMessage } from '@siemens/ix';\nimport { IxButton } from '@siemens/ix-react';\nimport React from 'react';\n\nexport default () => {\n  const triggerMessage = async () => {\n    (\n      await showMessage.success(\n        'Example title',\n        'message',\n        'Save',\n        'Cancel',\n        'payload:save',\n        'payload:cancel'\n      )\n    ).once(console.log);\n  };\n  return (\n    <IxButton onClick={() => triggerMessage()}>Show 'success' message</IxButton>\n  );\n};\n")))}d.isMDXComponent=!0}}]);