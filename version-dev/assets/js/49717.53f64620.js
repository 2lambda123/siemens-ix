"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[49717],{49717:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=t(7896),s=(t(2784),t(30876));const a={},r=void 0,o={unversionedId:"auto-generated/previews/angular/settings.ts",id:"auto-generated/previews/angular/settings.ts",title:"settings.ts",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/settings.ts.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/settings.ts",permalink:"/version-dev/docs/auto-generated/previews/angular/settings.ts",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/settings.ts.md",tags:[],version:"current",frontMatter:{}},u={},l=[],m={toc:l};function g(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { AfterViewInit, Component, ElementRef, ViewChild } from \'@angular/core\';\n\n@Component({\n  selector: \'app-example\',\n  template: `\n    <ix-basic-navigation>\n      <div class="placeholder-logo" slot="logo"></div>\n      <ix-menu #menu>\n        <ix-menu-settings>\n          <ix-menu-settings-item\n            label="Example Setting 1"\n          ></ix-menu-settings-item>\n          <ix-menu-settings-item\n            label="Example Setting 2"\n          ></ix-menu-settings-item>\n        </ix-menu-settings>\n      </ix-menu>\n    </ix-basic-navigation>\n  `,\n})\nexport default class Settings implements AfterViewInit {\n  @ViewChild(\'menu\', { read: ElementRef })\n  menuRef!: ElementRef<HTMLIxMenuElement>;\n\n  ngAfterViewInit() {\n    const { nativeElement } = this.menuRef;\n    nativeElement.toggleSettings(true);\n  }\n}\n\n')))}g.isMDXComponent=!0}}]);