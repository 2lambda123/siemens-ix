"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[44225],{44225:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>m});var o=a(7896),s=(a(2784),a(30876));const n={},r=void 0,i={unversionedId:"auto-generated/previews/angular/toast-custom.ts",id:"auto-generated/previews/angular/toast-custom.ts",title:"toast-custom.ts",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/toast-custom.ts.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/toast-custom.ts",permalink:"/version-dev/docs/auto-generated/previews/angular/toast-custom.ts",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/toast-custom.ts.md",tags:[],version:"current",frontMatter:{}},u={},m=[],c={toc:m};function d(t){let{components:e,...a}=t;return(0,s.kt)("wrapper",(0,o.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { ToastService } from '@siemens/ix-angular';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n      eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n      voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n      clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n      amet.\n    </div>\n    <ix-button (click)=\"showToastMessage()\">Show Toast</ix-button>\n    <ng-template #customToast let-toast>\n      <div>\n        <div>Custom toast message</div>\n        <ix-button (click)=\"toast.close('Action')\">Action</ix-button>\n      </div>\n    </ng-template>\n  `,\n})\nexport default class ToastCustom {\n  @ViewChild('customToast', { read: TemplateRef })\n  customToastRef!: TemplateRef<any>;\n\n  constructor(private readonly toastService: ToastService) {}\n\n  async showToastMessage() {\n    this.toastService.show({\n      message: this.customToastRef,\n    });\n  }\n}\n")))}d.isMDXComponent=!0}}]);