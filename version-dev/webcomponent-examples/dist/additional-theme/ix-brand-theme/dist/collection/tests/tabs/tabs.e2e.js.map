{"version":3,"file":"tabs.e2e.js","sourceRoot":"","sources":["../../../src/tests/tabs/tabs.e2e.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAE7C,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;EACnC,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACzC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;EACtE,CAAC,CAAC,CAAC;EAEH,cAAc,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3C,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAChC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;EACtE,CAAC,CAAC,CAAC;EAEH,cAAc,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC7C,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAClC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;EACtE,CAAC,CAAC,CAAC;EAEH,cAAc,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC5C,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAEjC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;IACnE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;IAEzB,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAE/B,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;EACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { expect } from '@playwright/test';\nimport { regressionTest } from '@utils/test';\n\nregressionTest.describe('tabs', () => {\n  regressionTest('basic', async ({ page }) => {\n    await page.goto('tabs/basic');\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n\n  regressionTest('rounded', async ({ page }) => {\n    await page.goto('tabs/rounded');\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n\n  regressionTest('stretched', async ({ page }) => {\n    await page.goto('tabs/stretched');\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n\n  regressionTest('overflow', async ({ page }) => {\n    await page.goto('tabs/overflow');\n\n    const selectItem = await page.waitForSelector(\"[data-tab-id='7']\");\n    await selectItem.click();\n\n    await page.waitForTimeout(500);\n\n    expect(await page.screenshot({ fullPage: true })).toMatchSnapshot();\n  });\n});\n"]}