"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[46419],{46419:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=t(7896),a=(t(2784),t(30876));const s={},i=void 0,l={unversionedId:"auto-generated/previews/react/modal-sizes",id:"auto-generated/previews/react/modal-sizes",title:"modal-sizes",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/modal-sizes.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/modal-sizes",permalink:"/docs/auto-generated/previews/react/modal-sizes",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/modal-sizes.md",tags:[],version:"current",frontMatter:{}},r={},d=[],u={toc:d};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { IxModalSize } from '@siemens/ix';\nimport { IxButton, Modal, ModalRef, showModal } from '@siemens/ix-react';\nimport React, { useRef } from 'react';\n\nexport default () => {\n  const modalRef = useRef<ModalRef>(null);\n\n  const open = (size: IxModalSize) => {\n    showModal({\n      size: size,\n      content: (\n        <Modal ref={modalRef}>\n          <IxButton onClick={() => modalRef.current?.close(null)}>\n            Modal with size {size}\n          </IxButton>\n        </Modal>\n      ),\n    });\n  };\n\n  return (\n    <div className=\"modal-sizes-example\">\n      <IxButton onClick={() => open('360')}>Show modal size 360</IxButton>\n      <IxButton onClick={() => open('480')}>Show modal size 480</IxButton>\n      <IxButton onClick={() => open('600')}>Show modal size 600</IxButton>\n      <IxButton onClick={() => open('720')}>Show modal size 720</IxButton>\n      <IxButton onClick={() => open('840')}>Show modal size 840</IxButton>\n      <IxButton onClick={() => open('full-width')}>\n        Show full-width modal\n      </IxButton>\n      <IxButton onClick={() => open('full-screen')}>\n        Show modal size full-screen\n      </IxButton>\n    </div>\n  );\n};\n")))}c.isMDXComponent=!0}}]);