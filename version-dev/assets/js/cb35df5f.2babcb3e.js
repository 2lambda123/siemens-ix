"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[58287,37170],{30876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},37170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(7896),a=(n(2784),n(30876));const o={},i=void 0,c={unversionedId:"auto-generated/previews/react/aggrid",id:"auto-generated/previews/react/aggrid",title:"aggrid",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/aggrid.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/aggrid",permalink:"/version-dev/docs/auto-generated/previews/react/aggrid",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/aggrid.md",tags:[],version:"current",frontMatter:{}},s={},u=[],p={toc:u};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GridOptions } from 'ag-grid-community';\n\nimport { AgGridReact } from 'ag-grid-react';\nimport React from 'react';\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: 'type',\n      headerName: 'Type',\n      resizable: true,\n      checkboxSelection: true,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      resizable: true,\n      sortable: true,\n      filter: true,\n    },\n    { field: 'hwVersion', headerName: 'HW version', resizable: true },\n  ],\n  rowData: [\n    {\n      type: 'Equipment',\n      status: 'Normal',\n      hwVersion: '2.0',\n      checked: false,\n    },\n    {\n      type: 'Positioner',\n      status: 'Maintenance',\n      hwVersion: '1.0',\n      checked: true,\n    },\n    {\n      type: 'Pressure sensor',\n      status: 'Unknown',\n      hwVersion: 'N/A',\n      checked: false,\n    },\n  ],\n  rowSelection: 'multiple',\n  suppressCellFocus: true,\n  checkboxSelection: true,\n} as GridOptions;\n\nexport default () => {\n  return (\n    <div\n      style={{ height: '12rem', width: '100%' }}\n      className=\"ag-theme-alpine-dark ag-theme-ix\"\n    >\n      <AgGridReact gridOptions={gridOptions} />\n    </div>\n  );\n};\n")))}l.isMDXComponent=!0}}]);