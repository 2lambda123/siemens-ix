"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[51882,7635],{30876:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(n),h=o,d=u["".concat(i,".").concat(h)]||u[h]||p[h]||c;return n?r.createElement(d,a(a({ref:t},m),{},{components:n})):r.createElement(d,a({ref:t},m))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<c;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7635:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var r=n(7896),o=(n(2784),n(30876));const c={},a=void 0,s={unversionedId:"auto-generated/previews/react/theme-switcher",id:"auto-generated/previews/react/theme-switcher",title:"theme-switcher",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/theme-switcher.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/theme-switcher",permalink:"/version-dev/docs/auto-generated/previews/react/theme-switcher",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/theme-switcher.md",tags:[],version:"current",frontMatter:{}},i={},l=[],m={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { IxSelectCustomEvent, themeSwitcher } from \'@siemens/ix\';\nimport {\n  IxButton,\n  IxCol,\n  IxGrid,\n  IxRow,\n  IxSelect,\n  IxSelectItem,\n} from \'@siemens/ix-react\';\nimport React, { ChangeEvent, useState } from \'react\';\nimport \'./theme-switcher.css\';\n\nexport default () => {\n  const [themes] = useState([\'theme-classic-light\', \'theme-classic-dark\']);\n  const [selectedTheme, setSelectedTheme] = useState(themes[1]);\n\n  const selectionChange = (event: IxSelectCustomEvent<string[]>) => {\n    const newTheme = event.detail[0];\n    themeSwitcher.setTheme(newTheme);\n    setSelectedTheme(newTheme);\n  };\n\n  const toggle = () => {\n    themeSwitcher.toggleMode();\n  };\n\n  const systemChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    if (target.checked) {\n      themeSwitcher.setVariant();\n      return;\n    }\n\n    themeSwitcher.setTheme(selectedTheme);\n  };\n\n  return (\n    <IxGrid className="ThemeSwitcher">\n      <IxRow>\n        <IxCol size="2">\n          <span>Light/Dark</span>\n        </IxCol>\n        <IxCol>\n          <IxButton onClick={toggle}>Toggle mode</IxButton>\n        </IxCol>\n      </IxRow>\n\n      <IxRow>\n        <IxCol size="2">Theme</IxCol>\n        <IxCol>\n          <IxSelect\n            selectedIndices={selectedTheme}\n            onItemSelectionChange={selectionChange}\n            placeholder="Select a theme"\n          >\n            {themes.map((theme) => (\n              <IxSelectItem\n                key={theme}\n                label={theme}\n                value={theme}\n              ></IxSelectItem>\n            ))}\n          </IxSelect>\n        </IxCol>\n      </IxRow>\n\n      <IxRow>\n        <IxCol size="2">Use System</IxCol>\n        <IxCol>\n          <input type="checkbox" id="system" onChange={systemChange} />\n          <label htmlFor="system"></label>\n        </IxCol>\n      </IxRow>\n    </IxGrid>\n  );\n};\n')))}p.isMDXComponent=!0}}]);