import{T as t}from"./p-4944ad0b.js";class e{constructor(){this.prefixTheme="theme-",this.suffixLight="-light",this.suffixDark="-dark",this.defaultTheme="theme-classic-dark",this._themeChanged=new t,this.registerMutationObserver()}get themeChanged(){return this._themeChanged}hasVariantSuffix(t){return t.endsWith(this.suffixDark)||t.endsWith(this.suffixLight)}isThemeClass(t){return t.startsWith(this.prefixTheme)&&this.hasVariantSuffix(t)}setTheme(t){if(!this.isThemeClass(t))throw Error(`Provided theme name ${t} does not match our naming conventions. (theme-<name>-(dark,light))`);const e=[];document.body.classList.forEach((t=>{this.isThemeClass(t)&&e.push(t)})),document.body.classList.remove(...e),document.body.classList.add(t)}toggleMode(){const t=[];document.body.classList.forEach((e=>{this.isThemeClass(e)&&t.push(e)})),0!==t.length?t.forEach((t=>{document.body.classList.replace(t,this.getOppositeMode(t))})):document.body.classList.add(this.getOppositeMode(this.defaultTheme))}getOppositeMode(t){return t.endsWith(this.suffixDark)?t.replace(/-dark$/g,this.suffixLight):t.endsWith(this.suffixLight)?t.replace(/-light$/g,this.suffixDark):void 0}handleMutations(t){return t.forEach((t=>{const{target:e}=t;e.classList.forEach((e=>{var s;this.isThemeClass(e)&&!(null===(s=t.oldValue)||void 0===s?void 0:s.includes(e))&&this._themeChanged.emit(e)}))}))}registerMutationObserver(){"undefined"!=typeof window&&("MutationObserver"in window?(this.mutationObserver=new MutationObserver((t=>{this.handleMutations(t)})),this.mutationObserver.observe(document.body,{attributeFilter:["class"],attributeOldValue:!0})):console.warn("ThemeSwitcher not supported by your browser. Missing MutationObserver API"))}}const s=new e;export{e as T,s as t}