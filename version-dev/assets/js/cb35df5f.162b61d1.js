"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[58287,37170],{30876:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},37170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=t(7896),o=(t(2784),t(30876));const a={},i=void 0,c={unversionedId:"auto-generated/previews/react/aggrid",id:"auto-generated/previews/react/aggrid",title:"aggrid",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/aggrid.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/aggrid",permalink:"/version-dev/docs/auto-generated/previews/react/aggrid",draft:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/aggrid.md",tags:[],version:"current",frontMatter:{}},s={},u=[],p={toc:u};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { GridOptions } from 'ag-grid-community';\n\nimport { AgGridReact } from 'ag-grid-react';\nimport React from 'react';\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: 'type',\n      headerName: 'Type',\n      resizable: true,\n      checkboxSelection: true,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      resizable: true,\n      sortable: true,\n      filter: true,\n    },\n    { field: 'hwVersion', headerName: 'HW version', resizable: true },\n  ],\n  rowData: [\n    {\n      type: 'Equipment',\n      status: 'Normal',\n      hwVersion: '2.0',\n      checked: false,\n    },\n    {\n      type: 'Positioner',\n      status: 'Maintenance',\n      hwVersion: '1.0',\n      checked: true,\n    },\n    {\n      type: 'Pressure sensor',\n      status: 'Unknown',\n      hwVersion: 'N/A',\n      checked: false,\n    },\n  ],\n  rowSelection: 'multiple',\n  suppressCellFocus: true,\n  checkboxSelection: true,\n} as GridOptions;\n\nexport default () => {\n  return (\n    <div\n      style={{ height: '12rem', width: '100%' }}\n      className=\"ag-theme-alpine-dark ag-theme-ix\"\n    >\n      <AgGridReact gridOptions={gridOptions} />\n    </div>\n  );\n};\n\n")))}l.isMDXComponent=!0}}]);